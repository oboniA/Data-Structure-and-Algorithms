Queue Data Structure
    Queue follows the First In First Out (FIFO) rule
     - the item that goes in first is the item that comes out first.

A queue is an object that allows the following operations:
    Enqueue: Add an element to the end of the queue
    Dequeue: Remove an element from the front of the queue
    IsEmpty: Check if the queue is empty
    IsFull: Check if the queue is full
    Peek: Get the value of the front of the queue without removing it


Types of Queues:
    Simple Queue
    Circular Queue
    Priority Queue
    Double Ended Queue

Simple Queue
    In a simple queue, insertion takes place at the rear
        and removal occurs at the front.
    It strictly follows the FIFO (First in First out) rule.

Circular Queue
    In a circular queue,the last element
        points to the first element making a circular link.
    Better memory utilization.
    If the last position is full and the first position is empty,
      we can insert an element in the first position

Priority queue
    Special type of queue in which
        each element is associated with a priority
        and is served according to its priority.
    If elements with the same priority occur,
        they are served according to their order in the queue.
    Insertion occurs based on the arrival of the values
        and removal occurs based on priority.

Deque (Double Ended Queue)
    Insertion and removal of elements can be performed
        from either from the front or rear.
    Thus, it does not follow the FIFO (First In First Out) rule.